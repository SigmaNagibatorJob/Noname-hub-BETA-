local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local player = game.Players.LocalPlayer

-- URL для проверки обновления скрипта
local scriptVersionUrl = "https://raw.githubusercontent.com/SigmaNagibatorJob/Noname-hub-BETA-/refs/heads/main/Noname%20Hub(BETA)"
local currentScriptVersion = "1.0"  -- текущая версия вашего скрипта

-- Функция для проверки актуальной версии скрипта
local function checkForUpdate()
    local success, response = pcall(function()
        return HttpService:GetAsync(scriptVersionUrl)
    end)

    if success then
        -- Предположим, что версия будет указана прямо в контенте файла в формате:
        -- "Version: x.x"
        local latestVersion = response:match("Version: (%d+%.%d+)")  
        
        if latestVersion then
            print("Latest version found: " .. latestVersion)
            if latestVersion ~= currentScriptVersion then
                -- Если версия обновилась, выкидываем игрока с сервера
                OrionLib:MakeNotification({
                    Name = "Update Script",
                    Content = "Ваш скрипт устарел. Выполняется обновление.",
                    Image = "rbxassetid://1234567890",
                    Time = 5
                })
                -- Выкидываем игрока
                TeleportService:Teleport(game.PlaceId, player)
            end
        else
            OrionLib:MakeNotification({
                Name = "Ошибка",
                Content = "Не удалось найти версию скрипта в файле.",
                Image = "rbxassetid://1234567890",
                Time = 5
            })
        end
    else
        OrionLib:MakeNotification({
            Name = "Ошибка",
            Content = "Не удалось проверить обновления.",
            Image = "rbxassetid://1234567890",
            Time = 5
        })
    end
end

-- Проверка обновлений при запуске скрипта
checkForUpdate()

-- Ваш основной код скрипта ниже...

local Window = OrionLib:MakeWindow({Name = "Noname Hub(BETA)", HidePremium = true, SaveConfig = true, ConfigFolder = "Orion"})

local MainTab = Window:MakeTab({
    Name = "Главное",
    Icon = "rbxassetid://1234567890",
    PremiumOnly = false
})

_G.AutoFarm = false
local speedValue = _G.Speed or 23
local coinLimit = 50

MainTab:AddToggle({
    Name = "Включить автофарм",
    Default = _G.AutoFarm,
    Callback = function(value)
        _G.AutoFarm = value
        OrionLib:MakeNotification({
            Name = "Автофарм",
            Content = _G.AutoFarm and "Автофарм включен" or "Автофарм отключен",
            Image = "rbxassetid://1234567890",
            Time = 5
        })
    end
})

MainTab:AddSlider({
    Name = "Лимит монет для фарма",
    Min = 10,
    Max = 100,
    Default = coinLimit,
    Color = Color3.fromRGB(0, 128, 255),
    Increment = 1,
    Callback = function(value)
        coinLimit = value
    end
})

local SettingsTab = Window:MakeTab({
    Name = "Настройки",
    Icon = "rbxassetid://1234567890",
    PremiumOnly = false
})

SettingsTab:AddButton({
    Name = "Перезайти на текущий сервер",
    Callback = function()
        TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, player)
    end
})

SettingsTab:AddButton({
    Name = "Присоединиться к маленькому серверу",
    Callback = function()
        local servers = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
        for _, server in ipairs(servers.data) do
            if server.playing < server.maxPlayers then
                TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id, player)
                return
            end
        end
        OrionLib:MakeNotification({
            Name = "Ошибка",
            Content = "Нет доступных маленьких серверов.",
            Image = "rbxassetid://1234567890",
            Time = 5
        })
    end
})

OrionLib:Init()
